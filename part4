#30-day Mortality Rate from Heart Attack -> 11
#[17] "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"      
#[23] "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia" 

rankall <- function(outcome, num = "best") {
  i <- 1
  j <- 1
  k <- 1
  t <- 1
  numbr <- num
  
  fdata <- read.csv("outcome-of-care-measures.csv")
  print(num)
  
  
  if(outcome == "heart_attack")
    stdata <- subset(fdata, select=c("Hospital.Name","State","Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"))
  
  else if(outcome == "heart_failure")
    stdata <- subset(fdata, select=c("Hospital.Name","State","Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"))
  
  else if(outcome == "pneumonia")
    stdata <- subset(fdata, select=c("Hospital.Name","State","Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"))
  else
    stop("Invalid Outcome")
  
  
  
  states <-levels(stdata[,2])
  
  
  for(k in 1:length(states)){
    outp <- data.frame()
    j <- 1
    x <- 1
    names <- c()
    #print(states[k])  
    for(i in 1:nrow(stdata)){
    
    if(stdata[i,"State"] == states[k]){
      if(!stdata[i,3] == "Not Available"){
        outp[j,"State"] <- stdata[i,"State"]
        outp[j,outcome] <- stdata[i,3]
        outp[j,"Hospital"] <- stdata[i,"Hospital.Name"]
        j<- j+1
        #count <- count+1
      }
      
    }
    }
    #message("output:")
    #print(outp)
    
    final <- outp[,outcome]
    lo <- as.numeric(levels(final)[final])
    if(num == "best")
      numbr <- 1
    if(num == "worst")
      numbr <- length(lo)
    
    lo <- sort(lo)
    #print(lo)
   # message("length of lo -> ", length(lo))
    
    #merda <- length(lo)
    
      
      #message("merda is---> ",merda)
    
   # message("numbr -> ",numbr)
    if(!is.na(lo[numbr])){
      t <- 1
      #message("nrow: ",nrow(outp))
    #  message("Nth element: ", lo[numbr])
      for (t in 1:nrow(outp)){
       # message("t -> ",t)
        #print(outp[t,outcome])
        temp <-outp[t,outcome]
        #message("temp_0 = ", temp)
        temp <- as.numeric(levels(temp)[temp])
        #message("temp = ",temp)
        if(temp == lo[numbr]){
          names[x] <- as.character(outp[t,"Hospital"])
          #message(as.character(outp[t,"Hospital"])," ", states[k])
          x <- x + 1
          #message("temp == lo[num]: ",temp, lo[numbr])
        }
      
      }
      
      names <-sort(names)  # IT'S NOT SORTING
      print(names)
      message("----------------")
      message(names[1],"   ", states[k])
      message("_____________ ")
      message(" ")
    }
    else
        message(NA,"   ", states[k])
  }
  
  
  
 
  
}
